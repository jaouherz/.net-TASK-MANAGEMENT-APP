@model TaskManagement.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <i class="bi bi-shield-lock auth-icon"></i>
            <h2 class="auth-title">Welcome Back</h2>
            <p class="auth-subtitle">Please sign in to continue</p>
        </div>

        <form asp-action="Login" method="post" class="auth-form">
            <div class="form-group mb-4">
                <label for="username" class="form-label">Username</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-person-fill"></i></span>
                    <input type="text" id="username" name="username" class="form-control"
                           placeholder="Enter your username" required />
                </div>
            </div>

            <div class="form-group mb-4">
                <label for="password" class="form-label">Password</label>
                <div class="input-group password-wrapper">
                    <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                    <input type="password" id="password" name="password" class="form-control"
                           placeholder="Enter your password" required />
                    <button type="button" class="btn btn-toggle-password">
                        <i class="bi bi-eye-slash"></i>
                    </button>
                </div>
            </div>

            <div class="d-grid mb-3">
                <button type="submit" class="btn btn-auth">
                    <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                </button>
            </div>

            <div class="text-center mb-3">
                <a href="#" class="text-muted auth-link">Forgot password?</a>
            </div>

            @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"]?.ToString()))
            {
            <div class="alert alert-auth-error">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                @ViewData["ErrorMessage"]
            </div>
            }
        </form>
    </div>
</div>

<style>
    /* Auth Container */
    .auth-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: calc(100vh - 200px);
        padding: 2rem;
    }

    /* Auth Card */
    .auth-card {
        width: 100%;
        max-width: 450px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    /* Auth Header */
    .auth-header {
        background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
        color: white;
        padding: 2rem;
        text-align: center;
    }

    .auth-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    .auth-title {
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .auth-subtitle {
        opacity: 0.9;
        margin-bottom: 0;
    }

    /* Auth Form */
    .auth-form {
        padding: 2rem;
    }

    /* Form Elements */
    .form-control {
        padding: 12px 15px;
        border-radius: 8px;
        border: 1px solid #e2e8f0;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
        }

    .input-group-text {
        background-color: transparent;
        border-right: none;
    }

    /* Password Toggle */
    .password-wrapper {
        position: relative;
    }

    .btn-toggle-password {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #94a3b8;
        cursor: pointer;
        z-index: 5;
    }

    /* Auth Button */
    .btn-auth {
        background-color: #6366f1;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-auth:hover {
            background-color: #4f46e5;
            transform: translateY(-2px);
        }

    /* Error Message */
    .alert-auth-error {
        background-color: #fee2e2;
        color: #b91c1c;
        border-radius: 8px;
        padding: 12px;
        display: flex;
        align-items: center;
    }

    /* Links */
    .auth-link {
        text-decoration: none;
        transition: color 0.2s ease;
    }

        .auth-link:hover {
            color: #6366f1 !important;
        }
</style>

<script>
    // Toggle password visibility
    document.querySelector('.btn-toggle-password').addEventListener('click', function () {
        const passwordInput = document.getElementById('password');
        const icon = this.querySelector('i');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.replace('bi-eye-slash', 'bi-eye');
        } else {
            passwordInput.type = 'password';
            icon.classList.replace('bi-eye', 'bi-eye-slash');
        }
    });
</script>